import argparse

#max_caption_words
#vocab_size
#tokenizer_dir
#training_dict_dir
#image_dir
#BATCH_SIZE
#BUFFER_SIZE
#embedding_dim
#units
#EPOCHS
#checkpoint_prefix_dir
#features_shape
#attention_features_shape

def parse_opt():
    parser = argparse.ArgumentParser()
    parser.add_argument('--model', type=str, default="bahdanau_att",
                help='show_tell, bahdanau_att, top_down, att_on_att, top_down_refiner, top_down_gru')
    parser.add_argument('--embedding_dim', type=int, default=256, 
                help='dimension of word embedding')
    parser.add_argument('--features_shape', type=int, default=2048, 
                help='dimension of features')
    parser.add_argument('--attention_features_shape', type=int, default=64, 
                help='shape of attention features')
    parser.add_argument('--units', type=int, default=512, 
                help='units in LSTM cell')
    parser.add_argument('--epochs', type=int, default=20, 
                help='number of epochs in training')
    parser.add_argument('--lr', type=float, default=0.001, 
                help='learning rate in optimizer')
    parser.add_argument('--epsilon', type=float, default=1e-4, 
                help='epsilon in optimizer')
    parser.add_argument('--batch_size', type=int, default=64, 
                help='batch size in training')
    parser.add_argument('--buffer_size', type=int, default=1000, 
                help='buffer size in preprocessing dataset')
    parser.add_argument('--vocab_size', type=int, default=8425, 
                help='determined by the size of vocab generated by tokenizer')
    parser.add_argument('--max_caption_words', type=int, default=35, 
                help='maximum number of the words in one caption')
    parser.add_argument('--tokenizer_dir', type=str, default='tokenizer/tokenizer.json', 
                help='path to tokenizer (flickr8k or flickr30k)')
    parser.add_argument('--checkpoint_prefix_dir', type=str, default='checkpoints/Flickr8k/', 
                help='path to saving checkpoints')
    parser.add_argument('--image_dir', type=str, default='data/Flickr8k/image_features_train/', 
                help='path to images (flickr8k or flickr30k)')
    parser.add_argument('--dict_dir', type=str, default='data/Flickr8k/training_dict.json', 
                help='path to training/test dictionary (flickr8k or flickr30k)') #!!!这里换名字了
    parser.add_argument('--log_dir', type=str, default='evaluations/bahdanau_att_flickr8k_test.csv', 
                help='path to training/test dictionary (flickr8k or flickr30k)') #!!!这里换名字了

    args = parser.parse_args()
    return args